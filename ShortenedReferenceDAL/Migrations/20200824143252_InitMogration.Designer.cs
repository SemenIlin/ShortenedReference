// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShortenedReferenceDAL.DataBase;

namespace ShortenedReferenceDAL.Migrations
{
    [DbContext(typeof(ReferenceShortenerContext))]
    [Migration("20200824143252_InitMogration")]
    partial class InitMogration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ShortenedReferenceCommon.Model.Counter", b =>
                {
                    b.Property<int>("ReferenceInfoId")
                        .HasColumnType("int");

                    b.Property<int>("AmountClickLink")
                        .HasColumnType("int");

                    b.HasKey("ReferenceInfoId");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("ShortenedReferenceCommon.Model.ReferenceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedData")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LongReference")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ShortenedReference")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ReferenceInfos");
                });

            modelBuilder.Entity("ShortenedReferenceCommon.Model.Counter", b =>
                {
                    b.HasOne("ShortenedReferenceCommon.Model.ReferenceInfo", "ReferenceInfo")
                        .WithOne("Counter")
                        .HasForeignKey("ShortenedReferenceCommon.Model.Counter", "ReferenceInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
